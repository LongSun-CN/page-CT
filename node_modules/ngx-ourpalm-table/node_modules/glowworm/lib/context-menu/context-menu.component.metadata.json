[{"__symbolic":"module","version":3,"metadata":{"GwContextMenuContainerComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"contextmenu-container","styleUrls":["context-menu.component.css"],"template":"\n        <ng-template #menusTpl let-menus>\n            <ul class=\"dropdown-menu\" *ngIf=\"_showMenus(menus)\">\n                <ng-container *ngFor=\"let menu of menus\">\n                    <ng-container *ngIf=\"menu.separator\">\n                        <li class=\"divider\" [class.hidden]=\"!_showMenu(menu)\"></li>\n                    </ng-container>\n                    <ng-container *ngIf=\"!menu.separator && !menu.submenus\">\n                        <li (click)=\"_onClickMenu(menu)\" [class.hidden]=\"!_showMenu(menu)\">\n                            <a [class.disabled]=\"_disabledMenus(menu)\">\n                                <i [ngClass]=\"menu.iconCls || 'empty-icon'\"></i>{{ menu.text }}\n                            </a>\n                        </li>\n                    </ng-container>\n                    <ng-container *ngIf=\"menu.submenus\">\n                        <li class=\"dropdown-submenu\" [class.hidden]=\"!_showMenu(menu)\">\n                            <a tabindex=\"-1\"><i [ngClass]=\"menu.iconCls || 'empty-icon'\"></i>{{ menu.text }}</a>\n                            <ng-container *ngTemplateOutlet=\"menusTpl;context:{$implicit: menu.submenus}\">\n                            </ng-container>\n                        </li>\n                    </ng-container>\n                </ng-container>\n            </ul>\n        </ng-template>\n\n        <div class=\"row-context-menu\" *ngIf=\"menus\" [ngStyle]=\"styler\" [ngClass]=\"class\">\n            <ng-container *ngTemplateOutlet=\"menusTpl; context:{ $implicit: menus }\"></ng-container>\n        </div>\n    "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject"},"arguments":[{"__symbolic":"reference","module":"./context-menu.service","name":"ContextMenuService"}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/core","name":"NgZone"},{"__symbolic":"reference","module":"@angular/core","name":"Renderer2"},{"__symbolic":"reference","module":"./context-menu.service","name":"ContextMenuService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"clickedOutside":[{"__symbolic":"method"}],"hide":[{"__symbolic":"method"}],"_onClickMenu":[{"__symbolic":"method"}],"_showMenus":[{"__symbolic":"method"}],"_showMenu":[{"__symbolic":"method"}],"_disabledMenus":[{"__symbolic":"method"}],"_deepCloneMenus":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"GwContextMenuContainerComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"contextmenu-container","styleUrls":["context-menu.component.css"],"template":"\n        <ng-template #menusTpl let-menus>\n            <ul class=\"dropdown-menu\" *ngIf=\"_showMenus(menus)\">\n                <ng-container *ngFor=\"let menu of menus\">\n                    <ng-container *ngIf=\"menu.separator\">\n                        <li class=\"divider\" [class.hidden]=\"!_showMenu(menu)\"></li>\n                    </ng-container>\n                    <ng-container *ngIf=\"!menu.separator && !menu.submenus\">\n                        <li (click)=\"_onClickMenu(menu)\" [class.hidden]=\"!_showMenu(menu)\">\n                            <a [class.disabled]=\"_disabledMenus(menu)\">\n                                <i [ngClass]=\"menu.iconCls || 'empty-icon'\"></i>{{ menu.text }}\n                            </a>\n                        </li>\n                    </ng-container>\n                    <ng-container *ngIf=\"menu.submenus\">\n                        <li class=\"dropdown-submenu\" [class.hidden]=\"!_showMenu(menu)\">\n                            <a tabindex=\"-1\"><i [ngClass]=\"menu.iconCls || 'empty-icon'\"></i>{{ menu.text }}</a>\n                            <ng-container *ngTemplateOutlet=\"menusTpl;context:{$implicit: menu.submenus}\">\n                            </ng-container>\n                        </li>\n                    </ng-container>\n                </ng-container>\n            </ul>\n        </ng-template>\n\n        <div class=\"row-context-menu\" *ngIf=\"menus\" [ngStyle]=\"styler\" [ngClass]=\"class\">\n            <ng-container *ngTemplateOutlet=\"menusTpl; context:{ $implicit: menus }\"></ng-container>\n        </div>\n    "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject"},"arguments":[{"__symbolic":"reference","module":"./context-menu.service","name":"ContextMenuService"}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/core","name":"NgZone"},{"__symbolic":"reference","module":"@angular/core","name":"Renderer2"},{"__symbolic":"reference","module":"./context-menu.service","name":"ContextMenuService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"clickedOutside":[{"__symbolic":"method"}],"hide":[{"__symbolic":"method"}],"_onClickMenu":[{"__symbolic":"method"}],"_showMenus":[{"__symbolic":"method"}],"_showMenu":[{"__symbolic":"method"}],"_disabledMenus":[{"__symbolic":"method"}],"_deepCloneMenus":[{"__symbolic":"method"}]}}}}]