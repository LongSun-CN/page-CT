import { Injectable } from "@angular/core";
import { Subject } from "rxjs/Subject";
import { ComponentLoaderService } from "../core/component-loader.service";
import { GwContextMenuContainerComponent } from "./context-menu.component";
var ContextMenuService = (function () {
    function ContextMenuService(componentLoader) {
        this.componentLoader = componentLoader;
        this.show = new Subject();
        this._directive_count = 0;
        this._init = false;
    }
    ContextMenuService.prototype.onMenuDirectiveInit = function () {
        var _this = this;
        this._directive_count++;
        if (this._directive_count > 0 && !this._init) {
            this._init = true;
            setTimeout(function () {
                _this._componentRef = _this.componentLoader.appendComponentToBody(GwContextMenuContainerComponent);
            });
        }
    };
    ContextMenuService.prototype.onMenuDirectiveDestroy = function () {
        this._directive_count--;
        if (this._directive_count <= 0 && this._componentRef) {
            this.componentLoader.removeComponentFormBody(this._componentRef);
            this._componentRef = null;
            this._init = false;
        }
    };
    return ContextMenuService;
}());
export { ContextMenuService };
ContextMenuService.decorators = [
    { type: Injectable },
];
ContextMenuService.ctorParameters = function () { return [
    { type: ComponentLoaderService, },
]; };
//# sourceMappingURL=context-menu.service.js.map