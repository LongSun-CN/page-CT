import { ChangeDetectorRef, EventEmitter, OnDestroy, PipeTransform } from "@angular/core";
import { OurpalmTableColumn } from "../../model/ourpalm-table-column";
import { DragulaService } from "ng2-dragula";
export declare class OurpalmTableSettingComponent implements OnDestroy {
    private dragulaService;
    private changeDetectorRef;
    originalColumns: OurpalmTableColumn[];
    private _columns;
    columnsChange: EventEmitter<OurpalmTableColumn[]>;
    openSettings: boolean;
    openSettingsChange: EventEmitter<boolean>;
    lmodel: string;
    rmodel: string;
    tempcolumns: SettingColumn[];
    lcolumns: SettingColumn[];
    rcolumns: SettingColumn[];
    constructor(dragulaService: DragulaService, changeDetectorRef: ChangeDetectorRef);
    columns: OurpalmTableColumn[];
    showColumns(): void;
    hideColumns(): void;
    resetColumns(): void;
    saveColumns(): void;
    closeSettings(): void;
    ngOnDestroy(): void;
    private _getOriginalColumn(field);
}
export interface SettingColumn {
    lchecked: boolean;
    rchecked: boolean;
    right: boolean;
    column: OurpalmTableColumn;
}
export declare class ColumnSettingsLeftFilter implements PipeTransform {
    transform(columns: SettingColumn[], name: string): SettingColumn[];
}
export declare class ColumnSettingsRightFilter implements PipeTransform {
    transform(columns: SettingColumn[], name: string): SettingColumn[];
}
