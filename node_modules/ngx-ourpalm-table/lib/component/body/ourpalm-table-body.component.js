import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from "@angular/core";
import { ContextMenu, ContextMenuService } from "glowworm/lib/context-menu";
var OurpalmTableBodyComponent = (function () {
    function OurpalmTableBodyComponent(contextMenuService) {
        this.contextMenuService = contextMenuService;
        this.onClickRow = new EventEmitter();
        this.onDbClickRow = new EventEmitter();
        this.onClickCell = new EventEmitter();
        this.onDbClickCell = new EventEmitter();
        this.onRowCheckBoxChange = new EventEmitter();
    }
    Object.defineProperty(OurpalmTableBodyComponent.prototype, "rowMenus", {
        get: function () {
            return this._rowMenus;
        },
        set: function (rowMenus) {
            this._rowMenus = this._deepCloneMenus(rowMenus);
        },
        enumerable: true,
        configurable: true
    });
    OurpalmTableBodyComponent.prototype.ngOnInit = function () {
        if (this.rowMenus && this.rowMenus.length > 0) {
            this.contextMenuService.onMenuDirectiveInit();
        }
    };
    OurpalmTableBodyComponent.prototype.ngOnDestroy = function () {
        if (this.rowMenus && this.rowMenus.length > 0) {
            this.contextMenuService.onMenuDirectiveDestroy();
        }
    };
    OurpalmTableBodyComponent.prototype.onClickCellEvent = function (cellIndex, row, column) {
        this.onClickCell.emit({
            index: cellIndex,
            row: row,
            column: column
        });
    };
    OurpalmTableBodyComponent.prototype.onDbClickCellEvent = function (cellIndex, column, row) {
        this.onDbClickCell.emit({
            index: cellIndex,
            row: row,
            column: column
        });
    };
    OurpalmTableBodyComponent.prototype.onContextMenu = function (event, rowIndex, cellIndex, row, column) {
        if (!column.disabledContextMenu) {
            event.preventDefault();
            event.stopPropagation();
            if (!row.selected) {
                this.onClickRow.emit({ row: row, event: event });
            }
            var length_1 = this.rowMenus ? this.rowMenus.filter(function (menu) { return !menu.separator; }).filter(function (menu) {
                return typeof menu.show === 'function' ? menu.show() : menu.show;
            }).length : 0;
            if (length_1 > 0) {
                this.contextMenuService.show.next({
                    event: event,
                    menus: this.rowMenus
                });
            }
        }
    };
    OurpalmTableBodyComponent.prototype.getStyler = function (column, rowIndex, columnIndex, rowData) {
        if (typeof column.styler == 'function') {
            return column.styler(rowIndex, columnIndex, rowData);
        }
        else {
            return column.styler;
        }
    };
    OurpalmTableBodyComponent.prototype._deepCloneMenus = function (menus) {
        if (!menus)
            return;
        function deepCloneMenu(menu) {
            if (menu.submenus) {
                menu.submenus = menu.submenus.map(function (submenu) { return deepCloneMenu(submenu); });
            }
            return new ContextMenu(menu);
        }
        return menus.map(function (menu) { return deepCloneMenu(menu); });
    };
    return OurpalmTableBodyComponent;
}());
export { OurpalmTableBodyComponent };
OurpalmTableBodyComponent.decorators = [
    { type: Component, args: [{
                selector: '[ourpalm-table-body]',
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None,
                template: "\n        <ng-container *ngFor=\"let row of rows; let i = index;\">\n            <ng-container *ngIf=\"rowViewShowType !== 'rowView'\">\n                <tr [ngClass]=\"{'row-selected': row.selected}\"\n                    (click)=\"onClickRow.emit({row: row, event: $event})\"\n                    (dblclick)=\"onDbClickRow.emit(row)\">\n                    <ng-container *ngFor=\"let column of columns; let j = index\">\n                        <ng-container *ngIf=\"column.checkbox\">\n                            <td ourpalm-table-body-checkboxcell\n                                [class.hidden]=\"!column.show\"\n                                [row]=\"row\"\n                                [ngStyle]=\"getStyler(column, i, j, row.data)\"\n                                (click)=\"onClickCellEvent(j, row, column)\"\n                                (dblclick)=\"onDbClickCellEvent(j, row, column)\"\n                                (onRowCheckBoxChange)=\"onRowCheckBoxChange.emit(row)\"\n                                (contextmenu)=\"onContextMenu($event, i, j, row, column)\">\n                            </td>\n                        </ng-container>\n                        <ng-container *ngIf=\"!column.checkbox\">\n                            <td ourpalm-table-body-cell\n                                [class.hidden]=\"!column.show\"\n                                [row]=\"row.data\"\n                                [column]=\"column\"\n                                [index]=\"i\"\n                                [ngStyle]=\"getStyler(column, i, j, row.data)\"\n                                (click)=\"onClickCellEvent(j, row, column)\"\n                                (dblclick)=\"onDbClickCellEvent(j, row, column)\"\n                                (contextmenu)=\"onContextMenu($event, i, j, row, column)\">\n                            </td>\n                        </ng-container>\n                    </ng-container>\n                </tr>\n            </ng-container>\n            <ng-container *ngIf=\"rowViewShowType !== 'column'\">\n                <tr class=\"cardview\"\n                    [ngClass]=\"{'row-selected': row.selected}\"\n                    (click)=\"onClickRow.emit({row: row, event: $event})\"\n                    (dblclick)=\"onDbClickRow.emit(row)\">\n                    <td colspan=\"100000\">\n                        <ourpalm-table-body-rowview\n                                [rowIndex]=\"i\"\n                                [row]=\"row.data\"\n                                [rowView]=\"rowView\"\n                                [template]=\"rowViewTemplate\">\n                        </ourpalm-table-body-rowview>\n                    </td>\n                </tr>\n            </ng-container>\n        </ng-container>\n    "
            },] },
];
OurpalmTableBodyComponent.ctorParameters = function () { return [
    { type: ContextMenuService, },
]; };
OurpalmTableBodyComponent.propDecorators = {
    'columns': [{ type: Input },],
    'rows': [{ type: Input },],
    'rowViewShowType': [{ type: Input },],
    'rowView': [{ type: Input },],
    'rowViewTemplate': [{ type: Input },],
    'onClickRow': [{ type: Output },],
    'onDbClickRow': [{ type: Output },],
    'onClickCell': [{ type: Output },],
    'onDbClickCell': [{ type: Output },],
    'onRowCheckBoxChange': [{ type: Output },],
    'rowMenus': [{ type: Input },],
};
//# sourceMappingURL=ourpalm-table-body.component.js.map