import { Directive, ElementRef, EventEmitter, forwardRef, Input, Output } from "@angular/core";
import { ComponentLoaderService } from "../core/component-loader.service";
import { NG_VALUE_ACCESSOR } from "@angular/forms";
import { GwPopSelectComponent } from "./popselect.component";
export var GW_POPSELECT_DIRECTIVE_VALUE_ACCESSOR = {
    provide: NG_VALUE_ACCESSOR,
    useExisting: forwardRef(function () { return GwPopSelectDirective; }),
    multi: true
};
var GwPopSelectDirective = (function () {
    function GwPopSelectDirective(componentLoader, el) {
        this.componentLoader = componentLoader;
        this.el = el;
        this.onConfirm = new EventEmitter();
        this.onCancel = new EventEmitter();
        this._placement = 'bottom-left';
        this._zIndex = 1000;
        this._showFilter = true;
    }
    GwPopSelectDirective.prototype.ngOnInit = function () {
        var _this = this;
        setTimeout(function () {
            _this.componentRef = _this.componentLoader.appendComponentToBody(GwPopSelectComponent);
            var input = _this.componentRef.instance;
            input.source = _this.el;
            input.data = _this.data;
            input.filterKeys = _this.filterKeys;
            input.showFilter = _this.showFilter;
            input.placement = _this.placement;
            input.zIndex = _this.zIndex;
            input.onConfirm = _this.onConfirm;
            input.onCancel = _this.onCancel;
            input.writeValue(_this._value);
            input.registerOnTouched(_this._ontouchFun);
            input.registerOnChange(_this._onchangeFun);
        });
    };
    Object.defineProperty(GwPopSelectDirective.prototype, "data", {
        get: function () {
            return this._data;
        },
        set: function (data) {
            this._data = data;
            if (this.componentRef) {
                var input = this.componentRef.instance;
                input.data = data;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GwPopSelectDirective.prototype, "placement", {
        get: function () {
            return this._placement;
        },
        set: function (placement) {
            this._placement = placement;
            if (this.componentRef) {
                var input = this.componentRef.instance;
                input.placement = placement;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GwPopSelectDirective.prototype, "filterKeys", {
        get: function () {
            return this._filterKeys;
        },
        set: function (filterKeys) {
            this._filterKeys = filterKeys;
            if (this.componentRef) {
                var input = this.componentRef.instance;
                input.filterKeys = filterKeys;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GwPopSelectDirective.prototype, "zIndex", {
        get: function () {
            return this._zIndex;
        },
        set: function (zIndex) {
            this._zIndex = zIndex;
            if (this.componentRef) {
                var input = this.componentRef.instance;
                input.zIndex = zIndex;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GwPopSelectDirective.prototype, "showFilter", {
        get: function () {
            return this._showFilter;
        },
        set: function (showFilter) {
            this._showFilter = showFilter;
            if (this.componentRef) {
                var input = this.componentRef.instance;
                input.showFilter = showFilter;
            }
        },
        enumerable: true,
        configurable: true
    });
    GwPopSelectDirective.prototype.writeValue = function (obj) {
        if (this.componentRef) {
            var input = this.componentRef.instance;
            input.writeValue(obj);
        }
        else {
            this._value = obj;
        }
    };
    GwPopSelectDirective.prototype.registerOnChange = function (fn) {
        if (this.componentRef) {
            var input = this.componentRef.instance;
            input.registerOnChange(fn);
        }
        else {
            this._onchangeFun = fn;
        }
    };
    GwPopSelectDirective.prototype.registerOnTouched = function (fn) {
        if (this.componentRef) {
            var input = this.componentRef.instance;
            input.registerOnTouched(fn);
        }
        else {
            this._ontouchFun = fn;
        }
    };
    GwPopSelectDirective.prototype.ngOnDestroy = function () {
        this.componentLoader.removeComponentFormBody(this.componentRef);
    };
    return GwPopSelectDirective;
}());
export { GwPopSelectDirective };
GwPopSelectDirective.decorators = [
    { type: Directive, args: [{
                selector: '[gw-popselect]',
                providers: [GW_POPSELECT_DIRECTIVE_VALUE_ACCESSOR]
            },] },
];
GwPopSelectDirective.ctorParameters = function () { return [
    { type: ComponentLoaderService, },
    { type: ElementRef, },
]; };
GwPopSelectDirective.propDecorators = {
    'onConfirm': [{ type: Output },],
    'onCancel': [{ type: Output },],
    'data': [{ type: Input },],
    'placement': [{ type: Input },],
    'filterKeys': [{ type: Input },],
    'zIndex': [{ type: Input },],
    'showFilter': [{ type: Input },],
};
//# sourceMappingURL=popselect.directive.js.map